@model IEnumerable<Luncher.Web.Models.RestaurantResponse>
@{
    ViewData["Title"] = "Home Page";
}
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">

<!-- Dark Mode Styles -->
<style>
    body.dark-mode {
        background-color: #121212;
        color: #ffffff;
    }
    .dark-mode .text-center, .dark-mode div {
        background-color: #1e1e1e;
    }
    .dark-mode button {
        background-color: #333;
        color: #fff;
        border: 1px solid #fff;
    }
    
    .dark-mode button:hover {
        background-color: #555;
    }
    
    .dark-mode button:disabled {
        background-color: #222;
        color: #444;
    }
    
    .dark-mode .navbar-brand {
        color: #fff;
    }
    
    .dark-mode header {
        background-color: #333 !important;
    }
</style>

<button id="darkModeToggle" style="position: fixed; top: 10px; right: 10px;">🌙/☀️</button>

<div class="text-center">
    @{
        var culture = new System.Globalization.CultureInfo("cs-CZ");
        var day = culture.DateTimeFormat.GetDayName(DateTime.Today.DayOfWeek);
        TimeZoneInfo cetTimeZone = TimeZoneInfo.FindSystemTimeZoneById("Central European Standard Time");
        DateTime utcNow = DateTime.UtcNow;
        DateTime cetNow = TimeZoneInfo.ConvertTimeFromUtc(utcNow, cetTimeZone);
        DateTime nextFriday = cetNow.Date.AddDays(5 - (int)cetNow.DayOfWeek).AddHours(15).AddMinutes(50);

        if (cetNow > nextFriday)
        {
            nextFriday = nextFriday.AddDays(7);
        }
    }

    <h1 class="display-4">Dnes je @day</h1>
    <div class="d-flex align-items-center justify-content-center mt-4 gap-3">
        <img src="~/img/pivko.png" class="fas fa-beer" alt="beer" class="me-3" style="width: 48px;" />
        <h2 id="countdown" class="display-6"></h2>
    </div>
    <hr/>
</div>

<div>
    @foreach (var restaurant in Model)
    {
        <div class="@restaurant.Name">
            <h2 style="display: inline-block">@restaurant.Name</h2>
            <span>|   </span>
            <button class="vote-btn" style="display: inline-block;">Hlasuj</button>
            <span>   |</span>
            <span class="votes" style="display: inline-block;font-weight: bold;">@restaurant.Votes</span>
            <br />

            @if (!restaurant.Soaps.Any() && !restaurant.Meals.Any())
            {
                <div>Nenalezeno žádné menu</div>
            }
            else
            {
                <h5>Polévky</h5>
                <ul>
                    @foreach (var soap in restaurant.Soaps)
                    {
                        <li>@soap.Name</li>
                    }
                </ul>
                <br />

                <h5>Hlavní</h5>
                <ul>
                    @foreach (var meal in restaurant.Meals)
                    {
                        <li>@meal.Name</li>
                    }
                </ul>
            }

            <hr />
        </div>
    }
</div>
<div class="text-center text-muted" style="font-size: 0.3em; opacity: 50%">
    Používáním aplikace uživatel automaticky souhlasí s <a class="text-muted" href="/Home/TermsOfService">podmínkami užívání</a>.
</div>

<script>
    function formatDays(days) {
        if (days === 1) return "1 den";
        if (days >= 2 && days <= 4) return `${days} dny`;
        return `${days} dní`;
    }

    function formatHours(hours) {
        if (hours === 1) return "1 hodina";
        if (hours >= 2 && hours <= 4) return `${hours} hodiny`;
        return `${hours} hodin`;
    }

    function formatMinutes(minutes) {
        if (minutes === 1) return "1 minuta";
        if (minutes >= 2 && minutes <= 4) return `${minutes} minuty`;
        return `${minutes} minut`;
    }
    
    function formatSeconds(seconds) {
        if (seconds === 1) return "1 sekunda";
        if (seconds >= 2 && seconds <= 4) return `${seconds} sekundy`;
        return `${seconds} sekund`;
    }

    function startCountdown(targetTime) {
        function updateCountdown() {
            let now = new Date();
            let remainingTime = targetTime - now;
            
            if (remainingTime > 0) {
                let days = Math.floor(remainingTime / (1000 * 60 * 60 * 24));
                let hours = Math.floor((remainingTime % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
                let minutes = Math.floor((remainingTime % (1000 * 60 * 60)) / (1000 * 60));
                let seconds = Math.floor((remainingTime % (1000 * 60)) / 1000);

                document.getElementById("countdown").innerHTML =
                    `Už jenom ${formatDays(days)} ${formatHours(hours)} ${formatMinutes(minutes)} ${formatSeconds(seconds)}`;
            } else {
                document.getElementById("countdown").innerHTML = "Je čas na pivo!";
                clearInterval(interval);
            }
        }

        updateCountdown(); // Initial call to avoid delay
        let interval = setInterval(updateCountdown, 1000);
    }

    // Pass the calculated next Friday time from Razor to JavaScript
    let nextFriday = new Date("@nextFriday.ToString("yyyy-MM-ddTHH:mm:ss")");
    startCountdown(nextFriday);

    // Dark Mode Toggle
    const darkModeToggle = document.getElementById("darkModeToggle");
    const body = document.body;

    function toggleDarkMode() {
        body.classList.toggle("dark-mode");
        localStorage.setItem("darkMode", body.classList.contains("dark-mode") ? "enabled" : "disabled");
    }

    darkModeToggle.addEventListener("click", toggleDarkMode);

    // Check user preference
    if (localStorage.getItem("darkMode") === "enabled") {
        body.classList.add("dark-mode");
    }
</script>
